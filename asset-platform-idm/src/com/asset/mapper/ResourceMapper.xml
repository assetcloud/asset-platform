<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.asset.mapper.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.asset.bean.Resource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="component" jdbcType="VARCHAR" property="component" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="icon_cls" jdbcType="VARCHAR" property="iconCls" />
    <result column="keep_alive" jdbcType="BIT" property="keepAlive" />
    <result column="require_auth" jdbcType="BIT" property="requireAuth" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="resource_type" jdbcType="INTEGER" property="resourceType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, url, path, component, name, icon_cls, keep_alive, require_auth, parent_id, enabled, 
    resource_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from as_resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from as_resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.asset.bean.Resource">
    insert into as_resource (id, url, path, 
      component, name, icon_cls, 
      keep_alive, require_auth, parent_id, 
      enabled, resource_type)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{component,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{iconCls,jdbcType=VARCHAR}, 
      #{keepAlive,jdbcType=BIT}, #{requireAuth,jdbcType=BIT}, #{parentId,jdbcType=INTEGER}, 
      #{enabled,jdbcType=BIT}, #{resourceType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.asset.bean.Resource">
    insert into as_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="iconCls != null">
        icon_cls,
      </if>
      <if test="keepAlive != null">
        keep_alive,
      </if>
      <if test="requireAuth != null">
        require_auth,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null">
        #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="keepAlive != null">
        #{keepAlive,jdbcType=BIT},
      </if>
      <if test="requireAuth != null">
        #{requireAuth,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.asset.bean.Resource">
    update as_resource
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null">
        icon_cls = #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="keepAlive != null">
        keep_alive = #{keepAlive,jdbcType=BIT},
      </if>
      <if test="requireAuth != null">
        require_auth = #{requireAuth,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.asset.bean.Resource">
    update as_resource
    set url = #{url,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      icon_cls = #{iconCls,jdbcType=VARCHAR},
      keep_alive = #{keepAlive,jdbcType=BIT},
      require_auth = #{requireAuth,jdbcType=BIT},
      parent_id = #{parentId,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=BIT},
      resource_type = #{resourceType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.asset.bean.Resource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="component" jdbcType="VARCHAR" property="component" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="icon_cls" jdbcType="VARCHAR" property="iconCls" />
    <result column="keep_alive" jdbcType="BIT" property="keepAlive" />
    <result column="require_auth" jdbcType="BIT" property="requireAuth" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="resource_type" jdbcType="INTEGER" property="resourceType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, url, path, component, name, icon_cls, keep_alive, require_auth, parent_id, enabled, 
    resource_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from as_resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from as_resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.asset.bean.Resource">
    insert into as_resource (id, url, path, 
      component, name, icon_cls, 
      keep_alive, require_auth, parent_id, 
      enabled, resource_type)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{component,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{iconCls,jdbcType=VARCHAR}, 
      #{keepAlive,jdbcType=BIT}, #{requireAuth,jdbcType=BIT}, #{parentId,jdbcType=INTEGER}, 
      #{enabled,jdbcType=BIT}, #{resourceType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.asset.bean.Resource">
    insert into as_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="iconCls != null">
        icon_cls,
      </if>
      <if test="keepAlive != null">
        keep_alive,
      </if>
      <if test="requireAuth != null">
        require_auth,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null">
        #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="keepAlive != null">
        #{keepAlive,jdbcType=BIT},
      </if>
      <if test="requireAuth != null">
        #{requireAuth,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.asset.bean.Resource">
    update as_resource
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null">
        icon_cls = #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="keepAlive != null">
        keep_alive = #{keepAlive,jdbcType=BIT},
      </if>
      <if test="requireAuth != null">
        require_auth = #{requireAuth,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.asset.bean.Resource">
    update as_resource
    set url = #{url,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      icon_cls = #{iconCls,jdbcType=VARCHAR},
      keep_alive = #{keepAlive,jdbcType=BIT},
      require_auth = #{requireAuth,jdbcType=BIT},
      parent_id = #{parentId,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=BIT},
      resource_type = #{resourceType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.asset.bean.Resource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="component" jdbcType="VARCHAR" property="component" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="icon_cls" jdbcType="VARCHAR" property="iconCls" />
    <result column="keep_alive" jdbcType="BIT" property="keepAlive" />
    <result column="require_auth" jdbcType="BIT" property="requireAuth" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="resource_type" jdbcType="INTEGER" property="resourceType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, url, path, component, name, icon_cls, keep_alive, require_auth, parent_id, enabled, 
    resource_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from as_resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from as_resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.asset.bean.Resource">
    insert into as_resource (id, url, path, 
      component, name, icon_cls, 
      keep_alive, require_auth, parent_id, 
      enabled, resource_type)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{component,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{iconCls,jdbcType=VARCHAR}, 
      #{keepAlive,jdbcType=BIT}, #{requireAuth,jdbcType=BIT}, #{parentId,jdbcType=INTEGER}, 
      #{enabled,jdbcType=BIT}, #{resourceType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.asset.bean.Resource">
    insert into as_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="iconCls != null">
        icon_cls,
      </if>
      <if test="keepAlive != null">
        keep_alive,
      </if>
      <if test="requireAuth != null">
        require_auth,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null">
        #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="keepAlive != null">
        #{keepAlive,jdbcType=BIT},
      </if>
      <if test="requireAuth != null">
        #{requireAuth,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.asset.bean.Resource">
    update as_resource
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null">
        icon_cls = #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="keepAlive != null">
        keep_alive = #{keepAlive,jdbcType=BIT},
      </if>
      <if test="requireAuth != null">
        require_auth = #{requireAuth,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.asset.bean.Resource">
    update as_resource
    set url = #{url,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      icon_cls = #{iconCls,jdbcType=VARCHAR},
      keep_alive = #{keepAlive,jdbcType=BIT},
      require_auth = #{requireAuth,jdbcType=BIT},
      parent_id = #{parentId,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=BIT},
      resource_type = #{resourceType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>