<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.asset.mapper.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.asset.bean.Resource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="component" jdbcType="VARCHAR" property="component" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="icon_cls" jdbcType="VARCHAR" property="iconCls" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <association property="meta" javaType="com.asset.bean.ResourceMeta">
      <result column="keepAlive" property="keepAlive"/>
      <result column="requireAuth" property="requireAuth"/>
    </association>
    <collection property="roles" ofType="com.asset.bean.Role">
      <id column="roleId" property="id"/>
      <result column="role_name" property="roleName"/>
      <result column="role_name_zh" property="roleNameZh"/>
    </collection>
    <collection property="children" ofType="com.asset.bean.Resource">
      <id column="id2" property="id"/>
      <result column="path2" property="path" jdbcType="VARCHAR"/>
      <result column="component2" property="component" jdbcType="VARCHAR"/>
      <result column="name2" property="name" jdbcType="VARCHAR"/>
      <result column="iconCls2" property="iconCls" jdbcType="VARCHAR"/>
      <association property="meta" javaType="com.asset.bean.ResourceMeta">
        <result column="keepAlive2" property="keepAlive"/>
        <result column="requireAuth2" property="requireAuth"/>
      </association>
      <collection property="children" ofType="com.asset.bean.Resource">
        <id column="id3" property="id"/>
        <result column="name3" property="name" jdbcType="VARCHAR"/>
      </collection>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, url, path, component, name, icon_cls, parent_id, enabled
  </sql>
  <select id="getAllResource" resultMap="BaseResultMap">
        select
        m.*,
        r.`id` as rid,
        r.`role_name` as roleName,
        r.`role_name_zh` as roleNameZh
        from as_resource m left join as_resource_role mr on m.`id`=mr.`mid`
        left join as_role r on mr.`rid`=r.`id`
        WHERE m.`enabled`=true
        order by m.`id` desc
  </select>
  <select id="getResourcesByUserId" parameterType="Integer" resultMap="BaseResultMap">
        select
        m1.id,
        m1.path,
        m1.component,
        m1.icon_cls,
        m1.`name`,
        m1.require_auth,
        m1.keep_alive,
        m2.component as component2,
        m2.icon_cls as iconCls2,
        m2.keep_alive as keepAlive2,
        m2.`name` as name2,
        m2.path as path2,
        m2.require_auth as requireAuth2
        from as_resource m1,as_resource m2
        where m1.`id`=m2.`parent_id`
        and m1.`id`!=1
        and m2.`id`
        in(select mr.`mid` from as_user_role h_r,as_resource_role mr where h_r.`role_id`=mr.`rid` and h_r.`uid`=#{userId})
        and m2.`enabled`=true
        order by m1.`id`,m2.`id`
  </select>
  <select id="resourceTree" resultMap="BaseResultMap">
            select
            m1.`id`,
            m1.`name`,
            m2.`id` as id2,
            m2.`name` as name2,
            m3.`id` as id3,
            m3.`name` as name3
            from as_resource m1,as_resource m2,as_resource m3
            where m1.`id`=m2.`parent_id`
            and m2.`id`=m3.`parent_id`
            and m3.`enabled`=true
  </select>
  <select id="getResourcesByRid" resultType="Integer">
        SELECT mid from as_resource_role WHERE rid=#{roleId}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from as_resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from as_resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.asset.bean.Resource">
    insert into as_resource (id, url, path,
      component, name, icon_cls,
      keep_Alive, require_auth, parent_id,
      enabled)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR},
      #{component,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{iconCls,jdbcType=VARCHAR},
      #{keepAlive,jdbcType=BIT}, #{requireAuth,jdbcType=BIT}, #{parentId,jdbcType=INTEGER},
      #{enabled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.asset.bean.Resource">
    insert into as_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="iconCls != null">
        icon_cls,
      </if>
      <if test="keepAlive != null">
        keep_Alive,
      </if>
      <if test="requireAuth != null">
        require_auth,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null">
        #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="keepAlive != null">
        #{keepAlive,jdbcType=BIT},
      </if>
      <if test="requireAuth != null">
        #{requireAuth,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.asset.bean.Resource">
    update as_resource
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null">
        icon_cls = #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="keepAlive != null">
        keep_Alive = #{keepAlive,jdbcType=BIT},
      </if>
      <if test="requireAuth != null">
        require_auth = #{requireAuth,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.asset.bean.Resource">
    update as_resource
    set url = #{url,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      icon_cls = #{iconCls,jdbcType=VARCHAR},
      keep_Alive = #{keepAlive,jdbcType=BIT},
      require_auth = #{requireAuth,jdbcType=BIT},
      parent_id = #{parentId,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
